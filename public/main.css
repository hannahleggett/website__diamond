/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.hover__images, .home__mask, .work__wrapper, .navigation, .canvas, .preloader, .content, body, html, .home, .work, .info {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.work__gallery, .work__wrapper, .canvas, .preloader {
  align-items: center;
  display: flex;
  justify-content: center;
}

.dg.ac {
  z-index: 99999 !important;
}

.info__contact:after, .preloader__indicator__link:after {
  background: currentColor;
  color: #00ff37;
  bottom: 0;
  content: "";
  height: 100%;
  left: 0;
  position: absolute;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
  width: 100%;
  z-index: -1;
}

.info__contact:hover:after, .preloader__indicator__link:hover:after {
  transform: scaleX(1);
  transform-origin: left center;
}

.info__contact:after, .preloader__indicator__link:after {
  transform: scaleX(0);
  transform-origin: right center;
}

.info__contact, .preloader__indicator__link {
  display: inline-block;
}
.home__toggle, .navigation__list__link, body {
  font-size: 1.6rem;
  font-weight: 400;
  line-height: 1;
}

.work__info__description__text, .work__info__description__label {
  font-size: 1.4rem;
  font-weight: 400;
  line-height: 1;
}

.home__list__link__text, .info__content__link, .navigation__list__link, .info__contact, .preloader__indicator__link {
  display: inline-block;
  position: relative;
  vertical-align: middle;
}

.home__list__link__text:after, .info__content__link:after, .navigation__list__link:after {
  background: currentColor;
  color: #00ff37;
  bottom: 0;
  content: "";
  height: 105%;
  left: 0;
  position: absolute;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
  width: 100%;
  z-index: -1;
}

.home__list__link__text:hover:after, .info__content__link:hover:after, .navigation__list__link:hover:after {
  transform: scaleX(1);
  transform-origin: left center;
}

.home__list__link__text:after, .info__content__link:after, .navigation__list__link:after {
  transform: scaleX(0);
  transform-origin: right center;
}

.home__list__link__text, .info__content__link, .navigation__list__link {
  display: inline-block;
}
.home, .work, .info {
  opacity: 0;
  z-index: 1;
}

.home--active, .work--active, .info--active {
  opacity: 1;
  visibility: visible;
}

.home__list__link__text, .work__title__text, .info__content__title, .preloader__indicator__link__text {
  font-size: 2.2rem;
  font-weight: 500;
}

.info__contact__title, .info__title__text__inverse, .info__title__text {
  font-size: 7rem;
  font-weight: 500;
  line-height: 1.2;
}

@font-face {
  font-family: "Archia";
  src: url(1c7796f830ce24d1c96a.woff2) format("woff2"), url(97b7f9e05b914efa5889.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Archia";
  src: url(6e1d0e0d3d7a4cff3810.woff2) format("woff2"), url(5d58f2966b4908b3a69a.woff) format("woff");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Archia";
  src: url(fc74be9774f063fe85b7.woff2) format("woff2"), url(49114057ddaf315de2da.woff) format("woff");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Archia";
  src: url(c44adfc9e3e9d0744fd8.woff2) format("woff2"), url(9fffa867a19fa7da3b03.woff) format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Archia";
  src: url(9959ffe04c9461d31782.woff2) format("woff2"), url(4589ccf59b863f47c6a5.woff) format("woff");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
*,
*:after,
*:before {
  box-sizing: border-box;
  user-select: none;
}

html {
  background: #eeeeee;
  color: black;
  font-size: 0.5208333333vw;
  line-height: 1;
  overflow: hidden;
  position: fixed;
}
@media (max-width: 1023px) {
  html {
    font-size: 1vw;
  }
}
@media (max-width: 767px) {
  html {
    font-size: 1.3333333333vw;
  }
}

body {
  font-family: "Archia";
  position: fixed;
}

a {
  color: inherit;
  outline: none;
  text-decoration: none;
}

img {
  opacity: 0;
  transition: opacity 0.4s ease;
  vertical-align: middle;
}
img.loaded {
  opacity: 1;
}

[data-animations=title] span,
[data-animations=description] span {
  display: inline-block;
  overflow: hidden;
  vertical-align: top;
}

.preloader {
  background-color: #1b1b1b;
  color: black;
  text-align: center;
  z-index: 3;
}

.preloader__animation__wrapper {
  overflow: hidden;
}

.preloader__animation__icon {
  height: 7rem;
  width: 15rem;
}

.preloader__indicator {
  bottom: 10rem;
  left: 50%;
  position: absolute;
  transform: translateX(-50%);
}

.preloader__indicator__number {
  position: absolute;
  left: 50%;
  overflow: hidden;
  transform: translateX(-50%);
}

.preloader__indicator__number__text {
  display: inline-block;
}

.preloader__indicator__link {
  opacity: 0;
  visibility: hidden;
}

.preloader__indicator__link__text {
  display: inline-block;
}

.navigation {
  color: black;
  pointer-events: none;
  z-index: 2;
}

.navigation__link {
  color: black;
  font-size: 0;
  left: 4rem;
  pointer-events: auto;
  position: absolute;
  top: 4rem;
  transition: color 0.4s ease;
  vertical-align: center;
  width: 5.5rem;
}
.navigation__link:hover {
  color: #00ff37;
}

.navigation__list__item {
  cursor: pointer;
  position: absolute;
  right: 4rem;
  top: 4rem;
}

.navigation__list__link {
  display: block;
  padding: 0 0.5rem;
  pointer-events: auto;
}
.info {
  background: silver;
  color: #202020;
}
.info__wrapper {
  height: auto;
}

.info__text__wrapper {
  display: flex;
  flex-direction: column;
  margin: 0rem 30rem;
  padding-top: 2%;
}

.info__subhead {
  margin-bottom: 3rem;
}

.info__title {
  position: relative;
  top: 32rem;
  white-space: nowrap;
}

.info__title__marquee {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
  --offset: 0vw;
  --move-initial: calc(0% + var(--offset) + 14px);
  --move-final: calc(-25% + var(--offset));
}

.info__title__inverse__marquee {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
  --offset: 60vw;
  --move-initial: calc(0% + var(--offset) + 14px);
  --move-final: calc(-25% + var(--offset));
}

.marquee__inner {
  width: fit-content;
  display: flex;
  position: relative;
  transform: translate3d(var(--move-initial), 0, 0);
  animation: marquee 15s linear infinite;
  animation-play-state: paused;
}

.info__title__inverse__marquee:hover .marquee__inner {
  animation-play-state: running;
}

.info__title__marquee:hover .marquee__inner {
  animation-play-state: running;
}

@keyframes marquee {
  0% {
    transform: translate3d(var(--move-initial), 0, 0);
  }
  100% {
    transform: translate3d(var(--move-final), 0, 0);
  }
}
.info__title__text {
  padding: 7px;
  width: fit-content;
}
.info__title__text span span {
  font-size: 6.8rem;
}

.info__title__text__inverse {
  color: transparent;
  -webkit-text-stroke: 1px black;
  padding: 0px 7px;
  width: fit-content;
}
.info__title__text__inverse span span {
  font-size: 6.8rem;
}

.info__content {
  margin-top: 30rem;
}

.info__content__line {
  background-color: currentColor;
  height: 1px;
  width: 100%;
}

.info__content__text {
  display: flex;
  justify-content: space-between;
  margin: 2rem 0rem;
}

.info__content__title {
  width: 60rem;
}

.info__content__links {
  display: flex;
  flex-direction: column;
}

.info__content__link {
  line-height: 1.5;
  margin: 0.05rem 0rem;
  pointer-events: auto;
  text-align: right;
  width: 50rem;
}

.info__content__media {
  display: none;
}

.info__contact {
  align-items: center;
  border: 1px currentColor solid;
  display: flex;
  justify-content: space-between;
  padding: 6rem;
  margin-top: 6rem;
  margin-bottom: 6rem;
}

.info__contact__link__item {
  height: 6rem;
  transform: scaleX(-1);
  width: 6rem;
}

.work {
  background-color: #a03d3d;
  z-index: "content";
}
.work__wrapper {
  align-items: center;
  display: flex;
  flex-direction: column;
  pointer-events: none;
}

.work__text__wrapper {
  align-items: center;
  bottom: 0;
  display: flex;
  left: 0;
  margin-bottom: 3%;
  margin-left: 3%;
  position: absolute;
  vertical-align: middle;
  width: -webkit-fill-available;
  z-index: 3;
}

.work__title {
  text-align: center;
  margin-right: 2rem;
}

.work__info {
  display: flex;
}

.work__info__description {
  align-content: center;
  align-items: center;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  text-align: left;
  margin-left: 0.7rem;
}
.work__info__description:first-child {
  margin-left: 0;
}

.work__info__line {
  height: 1rem;
  width: 1px;
  background-color: black;
}

.work__info__description__label {
  line-height: 1.5;
  font-weight: 400;
}

.work__info__description__text {
  font-weight: 300;
  margin: 0rem 1rem;
}
.work__info__description__text:last-child {
  margin: 0;
  margin-left: 1rem;
}

.work__gallery {
  display: flex;
  flex-direction: row;
  left: 4rem;
  position: absolute;
  z-index: 1;
}

.work__gallery__media {
  height: 80rem;
  padding: 0 1.5rem;
}
.work__gallery__media:first-child {
  padding-left: 0rem;
}
.work__gallery__media:nth-child(2) {
  height: 100vh;
}
.work__gallery__media:last-child {
  padding-right: 0;
}

.work__gallery__media__image {
  height: 100%;
}

.work__link {
  position: absolute;
  bottom: 50%;
  cursor: pointer;
  left: 3%;
  pointer-events: auto;
  z-index: 3;
}

.work__link__icon {
  height: 5rem;
  width: 5rem;
}

.home {
  color: black;
  overflow: hidden;
  text-align: center;
}
.home__mask {
  height: 67%;
  overflow: hidden;
  top: 30%;
}

.home__wrapper {
  padding-bottom: 340px;
}

.home__list {
  padding-left: 4rem;
  pointer-events: none;
  position: relative;
  transition: all 0.7s ease-in-out;
  width: fit-content;
}
.home__list:hover > .home__list__link:not(:hover) {
  opacity: 0.3;
}

.home__list__link {
  cursor: pointer;
  display: flex;
  opacity: 1;
  pointer-events: auto;
  transition: opacity 0.7s ease-in-out;
  width: fit-content;
}
.home__list__link:not(:first-child) {
  margin-top: 0.4rem;
}

.home__list__link__text {
  color: black;
  z-index: 1002;
}
.home__list__link__text:hover {
  opacity: 1;
}

.home__list__media__wrapper {
  display: none;
  visibility: hidden;
}

.home__toggle {
  align-items: center;
  background-color: white;
  bottom: 0;
  display: flex;
  justify-content: center;
  padding: 0.5rem 0rem;
  position: absolute;
  width: 100%;
  transition: all 0.4s ease-in-out;
}
.home__toggle:hover {
  background-color: #00ff37;
}

.hover__images {
  z-index: -2;
}

.hover-reveal {
  bottom: 0;
  height: 100%;
  left: 0;
  pointer-events: none;
  position: fixed;
  opacity: 0;
  top: 0;
  width: 100%;
  z-index: -1;
}

.hover-reveal__inner {
  overflow: hidden;
}

.hover-reveal__inner,
.hover-reveal__img {
  width: 100%;
  height: 100vh;
}

.hover-reveal__img {
  background-size: cover;
  background-position: 50% 50%;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/