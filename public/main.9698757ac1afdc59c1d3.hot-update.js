/*! For license information please see main.9698757ac1afdc59c1d3.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatediamond("main",{"./app/classes/Page.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>f});var i=s("./node_modules/lodash/each.js"),n=s.n(i),a=s("./node_modules/lodash/map.js"),o=s.n(a),l=s("./node_modules/gsap/index.js"),r=s("./node_modules/normalize-wheel/index.js"),h=s.n(r),m=s("./node_modules/prefix/index.js"),c=s.n(m),d=s("./app/animations/Description.js"),u=s("./app/animations/Menutext.js"),p=s("./app/animations/Title.js"),w=s("./app/classes/Hover.js");class f{constructor({element:e,elements:t,id:s}){this.selector=e,this.selectorChildren={...t,animationsDescriptions:'[data-animations="description"]',animationsMenutext:'[data-animations="menutext"]',animationsTitles:'[data-animations="title"]',hoverItems:'[data-animations="hover"]'},this.scroll={current:0,target:0,last:0,limit:0},this.id=s,this.transformPrefix=c()("transform"),this.onMouseWheelEvent=this.onMouseWheel.bind(this)}create(){this.selector instanceof window.HTMLElement?this.element=this.selector:this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},n()(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=this.element.querySelector(e)))})),this.createAnimations()}createAnimations(){console.log(this.elements.animationsMenutext),this.animations=[],this.animationsDescriptions=o()(this.elements.animationsDescriptions,(e=>new d.default({element:e}))),this.animations.push(...this.animationsDescriptions),this.animationsMenutext=o()(this.elements.animationsMenutext,(e=>new u.default({element:e}))),this.animations.push(...this.animationsMenutext),this.animationsTitles=o()(this.elements.animationsTitles,(e=>new p.default({element:e}))),this.animations.push(...this.animationsTitles),this.hoverItems=o()(this.elements.hoverItems,(e=>new w.default({element:e}))),this.animations.push(...this.hoverItems)}createObserver(){this.observer=new window.ResizeObserver((e=>{for(const t of e)window.requestAnimationFrame((e=>{this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight}))})),this.observer.observe(this.elements.wrapper)}show(){return new Promise((e=>{this.animationIn=l.default.timeline(),this.animationIn.fromTo(this.element,{autoAlpha:0},{autoAlpha:1}),this.animationIn.call((t=>{this.addEventListeners(),e()}))}))}hide(){return new Promise((e=>{this.removeEventListeners(),this.animationOut=l.default.timeline(),this.animationOut.to(this.element,{autoAlpha:0,onComplete:e})}))}onMouseWheel(e){const{pixelY:t}=h()(e);this.scroll.target+=t}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight),n()(this.animations,(e=>e.onResize()))}update(){this.scroll.target=l.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current<.01&&(this.scroll.current=0),this.scroll.current=l.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}addEventListeners(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}removeEventListeners(){window.removeEventListener("mousewheel",this.onMouseWheelEvent)}}}},(function(e){e.h=()=>"37e70dbf36082e4787a6"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,